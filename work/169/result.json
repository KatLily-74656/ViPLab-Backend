{
    "Result" : {
        "ID" : "one chunk 2018-11-09 17:35:28",
        "status" : "final",
        "computation" : {
            "startTime" : "2018-11-09 17:35:25",
            "duration" : "2519ms",
            "finishTime" : "2018-11-09 17:35:28",
            "CC_versionLong" : "[ViP CCv4.6.1 (C chain)v1.4 (Matlab chain)v2.9 (Octave chain)v2.0 (DuMuX chain)v1.3 (C++ chain)v1.9 (Java chain)v1.8 (Wed Oct  3 12:52:35 CEST 2018)]",
            "CC_version" : "ViP CCv4.6.1",
            "chain_version" : "(Matlab chain)v2.9",
            "technicalInfo" : {
                "host" : "nfldevvip12",
                "PID" : "41277",
                "ID" : "#169"
            },
            "userInfo" : {
                "summary" : "(Matlab chain)v2.9 failed.",
                "elements" : [
                    {
                        "severity" : "error",
                        "type" : "lint",
                        "message" : "L 57 (C 46): Invalid syntax at ';'. Possibly, a ), }, or ] is missing.\n",
                        "source" : {
                            "elementID" : "codeFromStudent",
                            "extract" : "     fprintf('First run. No EOC available.\\n';",
                            "begin" : 1183,
                            "end" : 1229,
                            "line" : 57,
                            "col" : 46
                        },
                        "output" : {
                            "elementID" : "interpret_stdout.txt",
                            "extract" : "L 57 (C 46): Invalid syntax at ';'. Possibly, a ), }, or ] is missing.\n",
                            "begin" : 350,
                            "end" : 421
                        }
                    },
                    {
                        "severity" : "error",
                        "type" : "callcheck",
                        "message" : "[Matlab function filtering] Parsing failed (original source: codeFromStudent, line (corrected): 57, col: 6): expecting <END> here",
                        "source" : {
                            "elementID" : "codeFromStudent",
                            "extract" : "     fprintf('First run. No EOC available.\\n';",
                            "begin" : 1183,
                            "end" : 1229,
                            "line" : 57,
                            "col" : 6
                        }
                    }
                ]
            }
        },
        "Solution" : {
            "postTime" : "2009-09-20T04:15:01.22Z",
            "ID" : "127.32.15.3#127",
            "comment" : "err by missing ')'",
            "exercise" : "https://nfldevvipecs.rus.uni-stuttgart.de/numlab/exercises/36314",
            "exerciseModifications" : {
                "elements" : [
                    {
                        "identifier" : "codeFromStudent",
                        "value" : "function get_EOC();\nfprintf('=======================\\n');\nfprintf('Get EOC (experimental order of convergence) of \\n');\nfprintf('IVP (initial value problems) solver: \\n');\nfprintf('=======================\\n');\n\n\n\n% set initial data\nx_0  = 0;\nx_end = 2;\ny_0 = 1;\n\nE_1 = 0;\nh_1 =0;\nEOC = 0;\n%Err_hist = zeros(1,5);\n%h_hist = zeros(1,5);\ncounter = 1;\n\n% loop over different step sizes\nfor n = 4:10\n   n_steps = 2^n;\n   h = (x_end-x_0)/n_steps;\n   h_hist(counter) = h;\n\n   y  = y_0;  \n   x = 0;\n   Err = 0;\n   hist_y(counter,1) = y;\n   hist_x(counter,1) = x;\n\n   % time step loop\n   for i_step = 1:n_steps\n      %dy = Euler_Cauchy(y,h,x);\n      %dy = Improved_Euler_Cauchy(y,h,x);\n      %dy = Heun(y,h,x);\n      dy = Runge_Kutta(y,h,x);\n      y = y + dy;\n      x = x + h;\n      hist_y(counter,i_step+1) = y;\n      hist_x(counter,i_step+1) = x;\n      Err = Err + (y - y_exact(x))^2;\n   end % i_step\n   Err = sqrt(Err/n_steps);\n   Err_hist(counter) = Err;\n   fprintf('n_steps: %i\\n',n_steps);\n   fprintf('h: %f\\n',h);\n   fprintf('Error: %e\\n',Err);\n   if (EOC ~= 0)\n     E_2 = Err;\n     h_2 = h;\n     EOC = log(E_1/E_2)/log(h_1/h_2);\n     fprintf('EOC:  %f\\n',EOC);\n   else;\n     EOC = 1;\n     fprintf('First run. No EOC available.\\n';\n   end\n   fprintf('=======================\\n');\n   E_1 = Err;\n   h_1 = h;\n   counter = counter + 1;\n\nend % n\n\n% plot step-size over error to see exponential convergence\n% this requires double-logarithmic plots (not implemented yet)\n%plot(h_hist,Err_hist,'k');\n\n\n% plot results for differents step sizes\nx_exact_hist = linspace(0,x_end,2^10);\nfor i =1:2^10\n   y_exact_hist(i) = y_exact(x_exact_hist(i));\nend\nplot(hist_x(1,:),hist_y(1,:),'k');\n%plot(hist_x(2,:),hist_y(2,:),'r');\n%plot(hist_x(3,:),hist_y(3,:),'b');\nplot(x_exact_hist,y_exact_hist,'c');\n\nend % function get_EOC\n\n%-------------------------------------------------------%\nfunction [dy] = Euler_Cauchy(y,h,x);\n    dy = h * f(x,y);\nend % function Euler_Cauchy\n%-------------------------------------------------------%\nfunction [dy] = Improved_Euler_Cauchy(y,h,x);\n     y_tilde = y + h/2 * f(x,y);\n    dy = h * f(x+h/2,y_tilde);\nend % function Improved_Euler_Cauchy\n%-------------------------------------------------------%\nfunction [dy] = Heun(y,h,x);\n    y_tilde = y + h * f(x,y);\n    dy = h/2 * ( f(x,y) + f(x+h,y_tilde) );\nend % function Heun\n%-------------------------------------------------------%\nfunction [dy] = Runge_Kutta(y,h,x);\nk1=f(x,y);\nk2=f(x+h/2,y+h/2*k1);\nk3=f(x+h/2,y+h/2*k2);\nk4=f(x+h,y+h*k3);\ndy=h/6*(k1+2*(k2+k3)+k4);\nend  % function Runge_Kutta\n\n"
                    }
                ]
            }
        },
        "elements" : [
            {
                "identifier" : "interpret_stderr.txt",
                "value" : "",
                "MIMEtype" : "text/plain"
            },
            {
                "identifier" : "interpret_stdout.txt",
                "value" : "\n                            < M A T L A B (R) >\n                  Copyright 1984-2015 The MathWorks, Inc.\n                   R2015a (8.5.0.197613) 64-bit (glnxa64)\n                             February 12, 2015\n\n \nFor online documentation, see http://www.mathworks.com/support\nFor product information, visit www.mathworks.com.\n \n\n\tAcademic License\n\nL 57 (C 46): Invalid syntax at ';'. Possibly, a ), }, or ] is missing.\n\n>> ",
                "MIMEtype" : "text/plain"
            }
        ]
    }
}