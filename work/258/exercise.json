{ "Exercise" :
{ "postTime"    : "2009-09-16T12:46:48.52Z",
  "TTL"         : 100000,
  "identifier"  : "C_exerciseContainingAll",
  "comment"     : "For backend tests with generic.noModifications.solution.json.",
  "name"        : "from C exercise template",
  "description" : "",

  "elements" :
  [ 
    { "identifier": "preamble",
      "visible"   : true,
      "modifiable": false,
      "name"      : "Source before editable code.",
      "MIMEtype"  : "text/plain",
      "syntaxHighlighting": "C",
      "emphasis"  : "low",
      "value"     : "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n//"
    },
    { "identifier": "editable",
      "visible"   : true,
      "modifiable": true,
      "name"      : "To be filled for tests.",
      "MIMEtype"  : "text/plain",
      "syntaxHighlighting": "C",
      "emphasis"  : "medium",
      "value"     : "FILE *  openFile(const char *  fn)\n{\n  FILE *  f = fopen(fn, \"w\");\n  if (f == 0) {\n    exit(1);\n  }\n  return f;\n}\nvoid  closeFile(FILE *  f)\n{\n  int err = fclose(f);\n  if (err) {\n    exit(1);\n  }\n}\nvoid plotMH(FILE * pf,\n            double x_min, double y_min,\n            double x_max, double y_max,\n            int x_steps, int y_steps)\n{\n  double x_stepwidth = (x_max - x_min) / (x_steps - 1);\n  double y_stepwidth = (y_max -y_min) / (y_steps -1);\n  \n  fprintf(pf, \"Gridplot\\n\");\n  fprintf(pf, \"# x-range %f %f\\n\", x_min, x_max);\n  fprintf(pf, \"# y-range %f %f\\n\", y_min, y_max);\n  fprintf(pf, \"# x-count %d\\n\", x_steps);\n  fprintf(pf, \"# y-count %d\\n\", y_steps);\n  fprintf(pf, \"# scale 1 1 1\\n\");\n  fprintf(pf, \"# min-color 255 0 0\\n\");\n  fprintf(pf, \"# max-color 0 0 255\\n\");\n  fprintf(pf, \"# time 0\\n\");\n  fprintf(pf, \"# label piezometric head\\n\");\n  for (int x_ix = 0; x_ix < x_steps; ++x_ix) {\n    double x = x_min + x_ix * x_stepwidth;\n    for (int y_ix = 0; y_ix < y_steps; ++y_ix) {\n      double y = y_min + y_ix * y_stepwidth;\n      double tmp = x*x + y*y;\n      double z = tmp ? sin(tmp)/tmp : 1;\n      fprintf(pf, \"%f \", z);\n    }\n    fprintf(pf, \"\\n\");\n  } \n}\n\n"
    },
    { "identifier": "postscript",
      "visible"   : true,
      "modifiable": false,
      "name"      : "Source after editable code.",
      "MIMEtype"  : "text/plain",
      "syntaxHighlighting": "C",
      "emphasis"  : "low",
      "value"     : "int main(int argc, char** argv)\n{\n  FILE * pf = openFile(\"vipplot.vgfc\");\n  double x_min = -3, x_max = +3;\n  double y_min = -3, y_max = +3;\n  int x_steps, y_steps;\n  x_steps = y_steps = 400;\n  \n  plotMH(pf,\n         x_min, y_min,\n         x_max, y_max,\n         x_steps, y_steps);\n  closeFile(pf);\n  return 0;\n}"
    }
  ],

  "config" :
  { "C" :
    {
      "merging"  :
      {
        "sources" : ["preamble", "editable", "postscript"]
      },
      "compiling" :
      {
        "compiler" : "gcc",
        "flags"    : "-Wall -std=c99"
      },
      "checking" :
      {
        "sources": [],
        "forbiddenCalls": "system"
      },
      "linking" :
      {
        "flags" : "-lm"
      },
      "running" :
      {
        "commandLineArguments": "foo.txt"
      },
      "stopAfterPhase" : "running"
    }
  }
}
}
